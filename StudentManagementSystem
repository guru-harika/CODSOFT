import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Student {
    private String name;
    private int id;

    public Student(String name, int id) {
        this.name = name;
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public int getId() {
        return id;
    }
}

public class StudentManagementSystem {
    private List<Student> students;

    public StudentManagementSystem() {
        students = new ArrayList<>();
    }

    public void addStudent(Student student) {
        students.add(student);
    }

    public void displayStudents() {
        System.out.println("List of Students:");
        for (Student student : students) {
            System.out.println("ID: " + student.getId() + ", Name: " + student.getName());
        }
    }

    public Student findStudentById(int id) {
        for (Student student : students) {
            if (student.getId() == id) {
                return student;
            }
        }
        return null;
    }

    public void removeStudent(int id) {
        Student studentToRemove = null;
        for (Student student : students) {
            if (student.getId() == id) {
                studentToRemove = student;
                break;
            }
        }
        if (studentToRemove != null) {
            students.remove(studentToRemove);
            System.out.println("Student with ID " + id + " removed successfully.");
        } else {
            System.out.println("Student with ID " + id + " not found.");
        }
    }

    public static void main(String[] args) {
        StudentManagementSystem sms = new StudentManagementSystem();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Student Management System");
            System.out.println("1. Add Student");
            System.out.println("2. Display Students");
            System.out.println("3. Search Student by ID");
            System.out.println("4. Remove Student");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");

            int choice;
            try {
                choice = scanner.nextInt();
            } catch (Exception e) {
                System.out.println("Invalid input. Please enter a valid choice.");
                scanner.nextLine();  // Consume newline
                continue;
            }

            scanner.nextLine();  // Consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter student name: ");
                    String name = scanner.nextLine();
                    System.out.print("Enter student ID: ");
                    int id;
                    try {
                        id = scanner.nextInt();
                    } catch (Exception e) {
                        System.out.println("Invalid input for student ID. Please try again.");
                        scanner.nextLine();  // Consume newline
                        break;
                    }
                    Student student = new Student(name, id);
                    sms.addStudent(student);
                    System.out.println("Student added successfully!");
                    break;
                case 2:
                    sms.displayStudents();
                    break;
                case 3:
                    System.out.print("Enter student ID to search: ");
                    int searchId;
                    try {
                        searchId = scanner.nextInt();
                    } catch (Exception e) {
                        System.out.println("Invalid input for student ID. Please try again.");
                        scanner.nextLine();  // Consume newline
                        break;
                    }
                    Student foundStudent = sms.findStudentById(searchId);
                    if (foundStudent != null) {
                        System.out.println("Student found: ID: " + foundStudent.getId() + ", Name: " + foundStudent.getName());
                    } else {
                        System.out.println("Student with ID " + searchId + " not found.");
                    }
                    break;
                case 4:
                    System.out.print("Enter student ID to remove: ");
                    int removeId;
                    try {
                        removeId = scanner.nextInt();
                    } catch (Exception e) {
                        System.out.println("Invalid input for student ID. Please try again.");
                        scanner.nextLine();  // Consume newline
                        break;
                    }
                    sms.removeStudent(removeId);
                    break;
                case 5:
                    System.out.println("Exiting the program.");
                    scanner.close();
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}
